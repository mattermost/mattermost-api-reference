swagger: '2.0'
info:
  description: |
    The Mattermost Web Services API is used by Mattermost clients and third party applications to interact with the server. [JavaScript and Golang drivers, along with a Golang bot sample](https://api.mattermost.com/#tag/drivers) connecting to the APIs are also available.

    This is the API reference for version 3.5.1 of the Mattermost server. To see the API reference for the [master branch](https://github.com/mattermost/platform) and the next upcoming version of Mattermost see the [master API reference](https://api.mattermost.com/master.html).

    ### Changelog

    The [Mattermost server changelog](https://docs.mattermost.com/administration/changelog.html) documents API changes since Mattermost server v3.2:

    * [Changes to Mattermost Server 3.5 API from 3.4 API](https://docs.mattermost.com/administration/changelog.html#api-changes-from-v3-4-to-v3-5)
    * [Changes to Mattermost Server 3.4 API from 3.3 API](https://docs.mattermost.com/administration/changelog.html#api-changes-from-v3-3-to-v3-4)
    * [Changes to Mattermost Server 3.3 API from 3.2 API](https://docs.mattermost.com/administration/changelog.html#api-changes-from-v3-2-to-v3-3)

    ### Support

    Mattermost core committers work with the community to keep the API documentation up-to-date.

    If you have questions on API routes not listed in this reference, please [join the Mattermost community server](https://pre-release.mattermost.com/signup_user_complete/?id=f1924a8db44ff3bb41c96424cdc20676) to ask questions in the Developers channel, [or post questions to our Developer Discussion forum](http://forum.mattermost.org/c/dev).

    [Bug reports](https://github.com/mattermost/mattermost-api-reference/issues) in the documentation or the API are also welcome, as are pull requests to fix the issues.

    ### Contributing

    When you have answers to API questions not addressed in our documentation we ask you to consider making a pull request to improve our reference. [Small changes](https://github.com/mattermost/mattermost-api-reference/commit/d574c0c1e95dc2228dc96663afd562f1305e3ece) and [larger changes](https://github.com/mattermost/mattermost-api-reference/commit/1ae3314f0935eebba8c885d8969dcad72f801501) are all welcome.

    We also have [Help Wanted tickets](https://github.com/mattermost/mattermost-api-reference/issues) available for community members who would like to help others more easily use the APIs. We acknowledge everyone's contribution in the [release notes of our next version](https://docs.mattermost.com/administration/changelog.html#contributors).

    The source code for this API reference is hosted at https://github.com/mattermost/mattermost-api-reference.

  version: 3.5.1
  title: Mattermost API Reference
  termsOfService: 'https://about.mattermost.com/default-terms/'
  contact:
    email: feedback@mattermost.com
  x-logo:
    url: "https://www.mattermost.org/wp-content/uploads/2016/03/logoHorizontal_WS.png"
    backgroundColor: "#FFFFFF"
basePath: /api/v3
host: your-mattermost-url.com
tags:
  - name: schema
    description: All API access is through HTTP(S) requests at `your-mattermost-url.com/api/v3`. All request and response bodies are `application/json`.
  - name: drivers
    description: |
      The easiest way to interact with the Mattermost Web Service API is through a language specific driver. These can be found at the following links:
      
      * [Mattermost JavaScript Driver](https://github.com/mattermost/mattermost-driver-javascript)
      * [Mattermost Golang Driver](https://github.com/mattermost/platform/blob/master/model/client.go)
      
      For an example usage of the Golang driver, please see the [Golang Bot Sample](https://github.com/mattermost/mattermost-bot-sample-golang).
    
  - name: authentication
    description: |
      The majority of the Mattermost API involves interacting with teams. Therefore, most API methods require authentication as a user. There are two ways to authenticate into a Mattermost system.
      
      All examples assume there is a Mattermost instance running at http://localhost:8065.
      
      #### Session Token
      
      Make an HTTP POST to `your-mattermost-url.com/api/v3/users/login` with a JSON body indicating the name of the team, the userâ€™s `login_id`, `password` and optionally the MFA `token`. The `login_id` can be an email, username or an AD/LDAP ID depending on the system's configuration.
      
      ```
      curl -i -d '{"login_id":"someone@nowhere.com","password":"thisisabadpassword"}' http://localhost:8065/api/v3/users/login
      ```
      
      If successful, the response will contain a `Token` header and a user object in the body.
      
      ```
      HTTP/1.1 200 OK
      Set-Cookie: MMSID=hyr5dmb1mbb49c44qmx4whniso; Path=/; Max-Age=2592000; HttpOnly
      Token: hyr5dmb1mbb49c44qmx4whniso
      X-Ratelimit-Limit: 10
      X-Ratelimit-Remaining: 9
      X-Ratelimit-Reset: 1
      X-Request-Id: smda55ckcfy89b6tia58shk5fh
      X-Version-Id: developer
      Date: Fri, 11 Sep 2015 13:21:14 GMT
      Content-Length: 657
      Content-Type: application/json; charset=utf-8

      {{user object as json}}
      ```
      
      Include the `Token` as part of the `Authentication` header on your future API requests with the `Bearer` method.
      
      ```
      curl -i -H 'Authorization: Bearer hyr5dmb1mbb49c44qmx4whniso' http://localhost:8065/api/v3/users/me
      ```
      
      You should now be able to access the API as the user you logged in as.
      
      #### OAuth 2.0
      
      Mattermost has the ability to act as an [OAuth 2.0](https://tools.ietf.org/html/rfc6749) service provider.
      
      For an example on how to register an OAuth 2.0 app with your Mattermost instance, please see the [Mattermost-Zapier integration documentation](https://docs.mattermost.com/integrations/zapier.html#register-zapier-as-an-oauth-2-0-application).
      
      Additional documentation on using Mattermost as an OAuth 2.0 service provider will be added here in the future.
  - name: errors
    description: |
      All errors will return an appropriate HTTP response code along with the following JSON body:
      ```
      {
          "id": "the.error.id",
          "message": "Something went wrong", // the reason for the error
          "request_id": "", // the ID of the request
          "status_code": 0, // the HTTP status code
          "is_oauth": false // whether the error is OAuth specific
      }
      ```
  - name: rate limiting
    description: |
      Whenever you make an HTTP request to the Mattermost API you might notice the following headers included in the response:
      ```
      X-Ratelimit-Limit: 10
      X-Ratelimit-Remaining: 9
      X-Ratelimit-Reset: 1441983590
      ```
      
      These headers are telling you your current rate limit status.
      
      | Header | Description |
      | ------ | ----------- |
      | X-Ratelimit-Limit | The maximum number of requests you can make per second. |
      | X-Ratelimit-Remaining | The number of requests remaining in the current window. |
      | X-Ratelimit-Reset | The remaining UTC epoch seconds before the rate limit resets. |
      
      If you exceed your rate limit for a window you will receive the following error in the body of the response:
      
      ```
      HTTP/1.1 429 Too Many Requests
      Date: Tue, 10 Sep 2015 11:20:28 GMT
      X-RateLimit-Limit: 10
      X-RateLimit-Remaining: 0
      X-RateLimit-Reset: 1
      
      limit exceeded
      ```
  - name: users
    description: Anything related to the user data model.
  - name: teams
    description: Anything related to the team data model.
  - name: channels
    description: Anything related to the channel data model.
  - name: posts
    description: Anything related to posts, the main messaging model in Mattermost.
  - name: files
    description: |
      These APIs will change significantly in Mattermost 3.5. This documentation reflects the version that will exist in Mattermost 3.5.

      Anything related to files uploaded by Mattermost users.
  - name: preferences
    description: Anything related to the current user's preferences which are used to store various settings in Mattermost.
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
