  /plugins:
    post:
      tags:
        - plugins
      summary: Upload plugin
      description: |
        Upload a plugin that is contained within a compressed .tar.gz file. Plugins and plugin uploads must be enabled in the server's config settings.

        ##### Permissions
        Must have `manage_system` permission.

        __Minimum server version__: 4.4
      consumes: ["multipart/form-data"]
      parameters:
        - name: plugin
          in: formData
          description: The plugin image to be uploaded
          required: true
          type: file
        - name: force
          in: formData
          description: "Set to 'true' to overwrite a previously installed plugin with the same ID, if any"
          required: false
          type: string
      responses:
        '201':
          description: Plugin upload successful
          schema:
            $ref: '#/definitions/StatusOK'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '413':
          $ref: '#/responses/TooLarge'
        '501':
          $ref: '#/responses/NotImplemented'
      x-code-samples:
        - lang: 'Go'
          source: |
            import (
              "bytes"
              "io/ioutil"
              "log"

              "github.com/mattermost/mattermost-server/model"
            )

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            tarData, err := ioutil.ReadFile("plugin.tar.gz")
            if err != nil {
              log.Fatal("error while reading file")
            }

            // Not forced
            manifest, resp := Client.UploadPlugin(bytes.NewReader(tarData))

            // Forced
            manifest, resp := Client.UploadPluginForced(bytes.NewReader(tarData))
    get:
      tags:
        - plugins
      summary: Get plugins
      description: |
        Get a list of inactive and a list of active plugin manifests. Plugins must be enabled in the server's config settings.

        ##### Permissions
        Must have `manage_system` permission.

        __Minimum server version__: 4.4
      responses:
        '200':
          description: Plugins retrieval successful
          schema:
            type: object
            properties:
              active:
                type: array
                items:
                  $ref: '#/definitions/PluginManifest'
              inactive:
                type: array
                items:
                  $ref: '#/definitions/PluginManifest'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '501':
          $ref: '#/responses/NotImplemented'
      x-code-samples:
        - lang: 'Go'
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            pluginsResp, resp := Client.GetPlugins()

  /plugins/install_from_url:
    post:
      tags:
        - plugins
      summary: Install plugin from url
      description: |
        Supply a URL to a plugin compressed in a .tar.gz file. Plugins must be enabled in the server's config settings.

        ##### Permissions
        Must have `manage_system` permission.

        __Minimum server version__: 5.14
      parameters:
        - name: plugin_download_url
          in: query
          description: URL used to download the plugin
          required: true
          type: string
        - name: force
          in: query
          description: "Set to 'true' to overwrite a previously installed plugin with the same ID, if any"
          required: false
          type: string
      responses:
        '201':
          description: Plugin install successful
          schema:
            $ref: '#/definitions/StatusOK'
        '400':
          $ref: '#/responses/BadRequest'
        '403':
          $ref: '#/responses/Forbidden'
        '501':
          $ref: '#/responses/NotImplemented'
      x-code-samples:
        - lang: 'Go'
          source: |
            import (
              "github.com/mattermost/mattermost-server/model"
            )

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            url := "https://mysite.com/my-plugin.tar.gz"

            // Not forced
            manifest, resp := Client.InstallPluginFromUrl(url, false)

            // Forced
            manifest, resp := Client.InstallPluginFromUrl(url, true)

  /plugins/{plugin_id}:
    delete:
      tags:
        - plugins
      summary: Remove plugin
      description: |
        Remove the plugin with the provided ID from the server. All plugin files are deleted. Plugins must be enabled in the server's config settings.

        ##### Permissions
        Must have `manage_system` permission.

        __Minimum server version__: 4.4
      parameters:
        - name: plugin_id
          in: path
          required: true
          type: string
      responses:
        '200':
            description: Plugin removed successfully
            schema:
              $ref: '#/definitions/StatusOK'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '501':
          $ref: '#/responses/NotImplemented'
      x-code-samples:
        - lang: 'Go'
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            pluginID := "com.mattermost.demo-plugin"

            ok, resp = Client.RemovePlugin(pluginID)

  /plugins/{plugin_id}/enable:
    post:
      tags:
        - plugins
      summary: Enable plugin
      description: |
        Enable a previously uploaded plugin. Plugins must be enabled in the server's config settings.

        ##### Permissions
        Must have `manage_system` permission.

        __Minimum server version__: 4.4
      parameters:
        - name: plugin_id
          in: path
          required: true
          type: string
      responses:
        '200':
            description: Plugin enabled successfully
            schema:
              $ref: '#/definitions/StatusOK'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '501':
          $ref: '#/responses/NotImplemented'
      x-code-samples:
        - lang: 'Go'
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            pluginID := "com.mattermost.demo-plugin"

            ok, resp = Client.EnablePlugin(pluginID)

  /plugins/{plugin_id}/disable:
    post:
      tags:
        - plugins
      summary: Disable plugin
      description: |
        Disable a previously enabled plugin. Plugins must be enabled in the server's config settings.

        ##### Permissions
        Must have `manage_system` permission.

        __Minimum server version__: 4.4
      parameters:
        - name: plugin_id
          in: path
          required: true
          type: string
      responses:
        '200':
            description: Plugin disabled successfully
            schema:
              $ref: '#/definitions/StatusOK'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '501':
          $ref: '#/responses/NotImplemented'
      x-code-samples:
        - lang: 'Go'
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            pluginID := "com.mattermost.demo-plugin"

            ok, resp = Client.DisablePlugin(pluginID)

  /plugins/webapp:
    get:
      tags:
        - plugins
      summary: Get webapp plugins
      description: |
        Get a list of web app plugins installed and activated on the server.

        ##### Permissions
        No permissions required.

        __Minimum server version__: 4.4
      responses:
        '200':
            description: Plugin deactivated successfully
            schema:
              type: array
              items:
                $ref: '#/definitions/PluginManifestWebapp'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '501':
          $ref: '#/responses/NotImplemented'
      x-code-samples:
        - lang: 'Go'
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")

            manifests, resp := Client.GetWebappPlugins()
