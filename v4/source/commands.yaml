  /commands:
    post:
      tags:
        - commands
      summary: Create a command
      description: |
        Create a command for a team.
        ##### Permissions
        `manage_slash_commands` for the team the command is in.
      parameters:
        - in: body
          name: body
          description: command to be created
          required: true
          schema:
            type: object
            required:
              - creator_id
              - team_id
              - method
              - trigger
              - url
            properties:
              creator_id:
                type: string
                description: User Id who you are creating the command
              team_id:
                type: string
                description: Team ID to where the command should be created
              method:
                type: string
                description: "`'P'` for post request, `'G'` for get request"
              trigger:
                type: string
                description: Activation word to trigger the command
              url:
                type: string
                description: The URL that the command will make the request
      responses:
        '201':
          description: Command creation successful
          schema:
            $ref: "#/definitions/Command"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '501':
          $ref: '#/responses/NotImplemented'
    get:
      tags:
        - commands
      summary: List commands for a team
      description: |
        List commands for a team.
        ##### Permissions
        `manage_slash_commands` if need list custom commands.
      parameters:
        - name: team_id
          in: query
          description: The team id.
          type: string
        - name: custom_only
          in: query
          description: |
            To get only the custom commands. If set to false will get the custom
            if the user have access plus the system commands, otherwise just the system commands.
          default: "false"
          type: string
      responses:
        '200':
          description: List Commands retrieve successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Command"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '501':
          $ref: '#/responses/NotImplemented'

  '/teams/{team_id}/commands/autocomplete':
    get:
      tags:
        - commands
      summary: List autocomplete commands
      description: |
        List autocomplete commands in the team.
        ##### Permissions
        `view_team` for the team.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
      responses:
        '200':
          description: Autocomplete commands retrieval successful
          schema:
            type: array
            items:
              $ref: "#/definitions/Command"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'

  '/commands/{command_id}':
    put:
      tags:
        - commands
      summary: Update a command
      description: |
        Update a single command based on command id string and Command struct.
        ##### Permissions
        Must have `manage_slash_commands` permission for the team the command is in.
      parameters:
        - in: path
          name: command_id
          description: ID of the command to update
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Command'
      responses:
        '200':
          description: Command updated successful
          schema:
            $ref: "#/definitions/Command"
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'

    delete:
      tags:
        - commands
      summary: Delete a command
      description: |
        Delete a command based on command id string.
        ##### Permissions
        Must have `manage_slash_commands` permission for the team the command is in.
      parameters:
        - in: path
          name: command_id
          description: ID of the command to delete
          required: true
          type: string
      responses:
        '200':
          description: Command deletion successful
          schema:
            $ref: '#/definitions/StatusOK'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
