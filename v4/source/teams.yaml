  /teams:
    post:
      tags:
        - teams
      summary: Create a team
      description: |
        Create a new team on the system.
        ##### Permissions
        Must be authenticated and have the `create_team` permission.
      parameters:
        - in: body
          name: body
          description: Team that is to be created
          required: true
          schema:
            type: object
            required:
              - name
              - display_name
              - type
            properties:
              name:
                type: string
                description: Unique handler for a team, will be present in the team URL
              display_name:
                type: string
                description: Non-unique UI name for the team
              type:
                type: string
                description: "`'O'` for open, `'I'` for invite only"
      responses:
        '201':
          description: Team creation successful
          schema:
            $ref: '#/definitions/Team'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'

    get:
      tags:
        - teams
      summary: Get teams
      description: |
        For regular users only returns open teams. Users with the "manage_system" permission will return teams regardless of type. The result is based on query string parameters - page and per_page.
        ##### Permissions
        Must be authenticated. "manage_system" permission is required to show all teams.
      parameters:
        - name: page
          in: query
          description: The page to select.
          default: "0"
          type: string
        - name: per_page
          in: query
          description: The number of teams per page.
          default: "60"
          type: string
      responses:
        '200':
          description: Team list retrieval successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Team'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'

  '/teams/{team_id}':
    get:
      tags:
        - teams
      summary: Get a team
      description: |
        Get a team on the system.
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
      responses:
        '200':
          description: Team retrieval successful
          schema:
            $ref: '#/definitions/Team'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

    put:
      tags:
        - teams
      summary: Update a team
      description: |
        Update a team by providing the team object. The fields that can be updated are defined in the request body, all other provided fields will be ignored.
        ##### Permissions
        Must have the `manage_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
        - in: body
          name: body
          description: Team to update
          required: true
          schema:
            type: object
            required:
              - display_name
              - description
              - company_name
              - allowed_domains
              - invite_id
              - allow_open_invite
            properties:
              display_name:
                type: string
              description:
                type: string
              company_name:
                type: string
              allowed_domains:
                type: string
              invite_id:
                type: string
              allow_open_invite:
                type: string
      responses:
        '200':
          description: Team update successful
          schema:
            $ref: '#/definitions/Team'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

    delete:
      tags:
        - teams
      summary: Delete a team
      description: |
        Soft deletes a team, by marking the team as deleted in the database. Soft deleted teams will not be accessible in the user interface.

        Optionally use the permanent query parameter to hard delete the team for compliance reasons. As of server version 5.0, to use this feature `ServiceSettings.EnableAPITeamDeletion` must be set to `true` in the server's configuration.
        ##### Permissions
        Must have the `manage_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
        - name: permanent
          in: query
          description: Permanently delete the team, to be used for compliance reasons only. As of server version 5.0, `ServiceSettings.EnableAPITeamDeletion` must be set to `true` in the server's configuration.
          required: false
          default: false
          type: boolean
      responses:
        '200':
          description: Team deletion successful
          schema:
            $ref: '#/definitions/StatusOK'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  '/teams/{team_id}/patch':
    put:
      tags:
        - teams
      summary: Patch a team
      description: |
        Partially update a team by providing only the fields you want to update. Omitted fields will not be updated. The fields that can be updated are defined in the request body, all other provided fields will be ignored.
        ##### Permissions
        Must have the `manage_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
        - in: body
          name: body
          description: Team object that is to be updated
          required: true
          schema:
            type: object
            properties:
              display_name:
                type: string
              description:
                type: string
              company_name:
                 type: string
              invite_id:
                type: string
              allow_open_invite:
                type: boolean
      responses:
        '200':
          description: team patch successful
          schema:
            $ref: '#/definitions/Team'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'

  '/teams/name/{name}':
    get:
      tags:
        - teams
      summary: Get a team by name
      description: |
        Get a team based on provided name string
        ##### Permissions
        Must be authenticated, team type is open and have the `view_team` permission.
      parameters:
        - name: name
          in: path
          description: Team Name
          required: true
          type: string
      responses:
        '200':
          description: Team retrieval successful
          schema:
            $ref: '#/definitions/Team'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  '/teams/search':
    post:
      tags:
        - teams
      summary: Search teams
      description: |
        Search teams based on search term provided in the request body.
        ##### Permissions
        Logged in user only shows open teams
        Logged in user with "manage_system" permission shows all teams
      parameters:
        - in: body
          name: body
          description: Search criteria
          required: true
          schema:
            type: object
            required:
              - term
            properties:
              term:
                description: The search term to match against the name or display name of teams
                type: string
      responses:
        '200':
          description: Teams search successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Team'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  '/teams/name/{name}/exists':
    get:
      tags:
        - teams
      summary: Check if team exists
      description: |
        Check if the team exists based on a team name.
      parameters:
        - name: name
          in: path
          description: Team Name
          required: true
          type: string
      responses:
        '200':
          description: Team retrieval successful
          schema:
            $ref: '#/definitions/TeamExists'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '404':
          $ref: '#/responses/NotFound'

  '/users/{user_id}/teams':
    get:
      tags:
        - teams
      summary: Get a user's teams
      description: |
        Get a list of teams that a user is on.
        ##### Permissions
        Must be authenticated as the user or have the `manage_system` permission.
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          type: string
      responses:
        '200':
          description: Team list retrieval successful
          schema:
            type: array
            items:
              $ref: '#/definitions/Team'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'

  '/teams/{team_id}/members':
    get:
      tags:
        - teams
      summary: Get team members
      description: |
        Get a page team members list based on query string parameters - team id, page and per page.
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
        - name: page
          in: query
          description: The page to select.
          default: "0"
          type: string
        - name: per_page
          in: query
          description: The number of users per page.
          default: "60"
          type: string
      responses:
        '200':
          description: Team members retrieval successful
          schema:
            type: array
            items:
              $ref: '#/definitions/TeamMember'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

    post:
      tags:
        - teams
      summary: Add user to team
      description: |
        Add user to the team by user_id.
        ##### Permissions
        Must be authenticated and team be open to add self. For adding another user, authenticated user must have the `add_user_to_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              team_id:
                type: string
              user_id:
                type: string
      responses:
        '201':
          description: Team member creation successful
          schema:
            $ref: '#/definitions/TeamMember'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  '/teams/members/invite':
    post:
      tags:
        - teams
      summary: Add user to team from invite
      description: |
        Using either an invite id or hash/data pair from an email invite link, add a user to a team.
        ##### Permissions
        Must be authenticated.
      parameters:
        - name: token
          in: query
          description: Token id from the invitation
          required: true
          type: string
      responses:
        '201':
          description: Team member creation successful
          schema:
            $ref: '#/definitions/TeamMember'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  '/teams/{team_id}/members/batch':
    post:
      tags:
        - teams
      summary: Add multiple users to team
      description: |
        Add a number of users to the team by user_id.
        ##### Permissions
        Must be authenticated. Authenticated user must have the `add_user_to_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/TeamMember'
      responses:
        '201':
          description: Team members created successfully.
          schema:
            type: array
            items:
              $ref: '#/definitions/TeamMember'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  '/users/{user_id}/teams/members':
    get:
      tags:
        - teams
      summary: Get team members for a user
      description: |
        Get a list of team members for a user. Useful for getting the ids of teams the user is on and the roles they have in those teams.
        ##### Permissions
        Must be logged in as the user or have the `edit_other_users` permission.
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          type: string
      responses:
        '200':
          description: Team members retrieval successful
          schema:
            type: array
            items:
              $ref: '#/definitions/TeamMember'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  '/teams/{team_id}/members/{user_id}':
    get:
      tags:
        - teams
      summary: Get a team member
      description: |
        Get a team member on the system.
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          type: string
      responses:
        '200':
          description: Team member retrieval successful
          schema:
            $ref: '#/definitions/TeamMember'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

    delete:
      tags:
        - teams
      summary: Remove user from team
      description: |
        Delete the team member object for a user, effectively removing them from a team.
        ##### Permissions
        Must be logged in as the user or have the `remove_user_from_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          type: string
      responses:
        '200':
          description: Team member deletion successful
          schema:
            $ref: '#/definitions/StatusOK'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  '/teams/{team_id}/members/ids':
    post:
      tags:
        - teams
      summary: Get team members by ids
      description: |
        Get a list of team members based on a provided array of user ids.
        ##### Permissions
        Must have `view_team` permission for the team.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
        - in: body
          name: body
          description: List of user ids
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Team members retrieval successful
          schema:
            type: array
            items:
              $ref: '#/definitions/TeamMember'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'

  '/teams/{team_id}/stats':
    get:
      tags:
        - teams
      summary: Get a team stats
      description: |
        Get a team stats on the system.
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
      responses:
        '200':
          description: Team stats retrieval successful
          schema:
            $ref: '#/definitions/TeamStats'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  '/teams/{team_id}/image':
    get:
      tags:
        - teams
      summary: Get the team icon
      description: |
        Get the team icon of the team.

        __Minimum server version__: 4.9

        ##### Permissions
        User must be authenticated. In addition, team must be open or the user must have the `view_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
      responses:
        '200':
          description: Team icon retrieval successful
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
        '501':
          $ref: '#/responses/NotImplemented'
    post:
      tags:
        - teams
      summary: Sets the team icon
      description: |
        Sets the team icon for the team.

        __Minimum server version__: 4.9

        ##### Permissions
        Must be authenticated and have the `manage_team` permission.
      consumes: ["multipart/form-data"]
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
        - name: image
          in: formData
          description: The image to be uploaded
          required: true
          type: file
      responses:
        '200':
          description: Team icon successfully set
          schema:
            $ref: '#/definitions/StatusOK'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '500':
          $ref: '#/responses/InternalServerError'
        '501':
          $ref: '#/responses/NotImplemented'

    delete:
      tags:
        - teams
      summary: Remove the team icon
      description: |
        Remove the team icon for the team.

        __Minimum server version__: 4.10

        ##### Permissions
        Must be authenticated and have the `manage_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
      responses:
        '200':
          description: Team icon successfully remove
          schema:
            $ref: '#/definitions/StatusOK'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '500':
          $ref: '#/responses/InternalServerError'
        '501':
          $ref: '#/responses/NotImplemented'

  '/teams/{team_id}/members/{user_id}/roles':
    put:
      tags:
        - teams
      summary: Update a team member roles
      description: |
        Update a team member roles. Valid team roles are "team_user", "team_admin" or both of them. Overwrites any previously assigned team roles.
        ##### Permissions
        Must be authenticated and have the `manage_team_roles` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          type: string
        - in: body
          name: body
          description: Space-delimited team roles to assign to the user
          required: true
          schema:
            type: object
            required:
              - roles
            properties:
              roles:
                type: string
      responses:
        '200':
          description: Team member roles update successful
          schema:
            $ref: '#/definitions/StatusOK'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  '/teams/{team_id}/members/{user_id}/schemeRoles':
    put:
      tags:
        - teams
      summary: Update the scheme-derived roles of a team member.
      description: |
        Update a team member's scheme_admin/scheme_user properties. Typically this should either be `scheme_admin=false, scheme_user=true` for ordinary team member, or `scheme_admin=true, scheme_user=true` for a team admin.

        __Minimum server version__: 5.0

        ##### Permissions
        Must be authenticated and have the `manage_team_roles` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          type: string
        - in: body
          name: body
          description: Scheme properties.
          required: true
          schema:
            type: object
            required:
              - scheme_admin
              - scheme_user
            properties:
              scheme_admin:
                type: boolean
              scheme_user:
                type: boolean
      responses:
        '200':
          description: Team member's scheme-derived roles updated successfully.
          schema:
            $ref: '#/definitions/StatusOK'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  '/users/{user_id}/teams/unread':
    get:
      tags:
        - teams
      summary: Get team unreads for a user
      description: |
        Get the count for unread messages and mentions in the teams the user is a member of.
        ##### Permissions
        Must be logged in.
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          type: string
        - name: exclude_team
          in: query
          description: Optional team id to be excluded from the results
          required: true
          type: string
      responses:
        '200':
          description: Team unreads retrieval successful
          schema:
            type: array
            items:
              $ref: '#/definitions/TeamUnread'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'

  '/users/{user_id}/teams/{team_id}/unread':
    get:
      tags:
        - teams
      summary: Get unreads for a team
      description: |
        Get the unread mention and message counts for a team for the specified user.
        ##### Permissions
        Must be the user or have `edit_other_users` permission and have `view_team` permission for the team.
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          type: string
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
      responses:
        '200':
          description: Team unread count retrieval successful
          schema:
            $ref: '#/definitions/TeamUnread'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  '/teams/{team_id}/invite/email':
    post:
      tags:
        - teams
      summary: Invite users to the team by email
      description: |
        Invite users to the existing team usign the user's email.
        ##### Permissions
        Must have `invite_to_team` permission for the team.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
        - in: body
          name: body
          description: List of user's email
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: Users invite successful
          schema:
            $ref: '#/definitions/StatusOK'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'

  '/teams/{team_id}/import':
    post:
      tags:
        - teams
      summary: Import a Team from other application
      description: |
        Import a team into a existing team. Import users, channels, posts, hooks.
        ##### Permissions
        Must have `permission_import_team` permission.
      consumes: ["multipart/form-data"]
      parameters:
        - name: file
          in: formData
          description: A file to be uploaded in zip format.
          required: true
          type: file
        - name: filesize
          in: formData
          description: The size of the zip file to be imported.
          required: true
          type: integer
        - name: importFrom
          in: formData
          description: String that defines from which application the team was exported to be imported into Mattermost.
          required: true
          allowEmptyValue: false
          type: string
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
      responses:
        '200':
          description: JSON object containing a base64 encoded text file of the import logs in its `results` property.
          schema:
            type: object
            properties:
              results:
                type: string
        '400':
          $ref: '#/responses/BadRequest'
        '403':
          $ref: '#/responses/Forbidden'

  '/teams/invite/{invite_id}':
    get:
      tags:
        - teams
      summary: Get invite info for a team
      description: |
        Get the `name`, `display_name`, `description` and `id` for a team from the invite id.

        __Minimum server version__: 4.0

        ##### Permissions
        No authentication required.
      parameters:
        - name: invite_id
          in: path
          description: Invite id for a team
          required: true
          type: string
      responses:
        '200':
          description: Team invite info retrieval successful
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              display_name:
                type: string
              description:
                type: string
        '400':
          $ref: '#/responses/BadRequest'

  '/teams/{team_id}/scheme':
    put:
      tags:
        - teams
      summary: Set a team's scheme
      description: |
        Set a team's scheme, more specifically sets the scheme_id value of a team record.

        ##### Permissions
        Must have `manage_system` permission.

        __Minimum server version__: 5.0
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          type: string
        - in: body
          name: body
          description: Scheme GUID
          required: true
          schema:
            type: object
            required:
              - scheme_id
            properties:
              scheme_id:
                type: string
                description: The ID of the scheme.
      responses:
        '200':
          description: Update team scheme successful
          schema:
            $ref: '#/definitions/StatusOK'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '501':
          $ref: '#/responses/NotImplemented'
      x-code-samples:
        - lang: 'Go'
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            teamID := "4xp9fdt77pncbef59f4k1qe83o"
            schemeID := "qjda3stwafbgpqjaxej3k76sga"

            ok, resp := UpdateTeamScheme(teamID, schemeID)
        - lang: 'curl'
          source: |
            curl -X PUT \
              https://your-mattermost-url.com/api/v4/teams/4xp9fdt77pncbef59f4k1qe83o/scheme \
              -H 'Authorization: Bearer frn8fu5rtpyc5m4xy6q3oj4yur' \
              -H 'Content-Type: application/json' \
              -d '{"scheme_id": "qjda3stwafbgpqjaxej3k76sga"}'
