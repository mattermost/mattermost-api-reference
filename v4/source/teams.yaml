  /teams:
    post:
      tags:
        - teams
      summary: Create a team
      description: |
        Create a new team on the system.
        ##### Permissions
        Must be authenticated and have the `create_team` permission.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - display_name
                - type
              properties:
                name:
                  type: string
                  description: Unique handler for a team, will be present in the team URL
                display_name:
                  type: string
                  description: Non-unique UI name for the team
                type:
                  type: string
                  description: "`'O'` for open, `'I'` for invite only"
        description: Team that is to be created
        required: true
      responses:
        "201":
          description: Team creation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            newTeam, err := Client.CreateTeam(&model.Team{
              Name:        "teamName",
              DisplayName: "TeamDisplayName",
              Type:        "O",
            })
    get:
      tags:
        - teams
      summary: Get teams
      description: >
        For regular users only returns open teams. Users with the
        "manage_system" permission will return teams regardless of type. The
        result is based on query string parameters - page and per_page.

        ##### Permissions

        Must be authenticated. "manage_system" permission is required to show all teams.
      parameters:
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of teams per page.
          schema:
            type: integer
            default: 60
        - name: include_total_count
          in: query
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Team list retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            teams, resp := Client.GetAllTeams("", 0, 100)
  "/teams/{team_id}":
    get:
      tags:
        - teams
      summary: Get a team
      description: |
        Get a team on the system.
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Team retrieval successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            teamID := "4xp9fdt77pncbef59f4k1qe83o"

            t, err := Client.GetTeam(teamID, "")
    put:
      tags:
        - teams
      summary: Update a team
      description: >
        Update a team by providing the team object. The fields that can be
        updated are defined in the request body, all other provided fields will
        be ignored.

        ##### Permissions

        Must have the `manage_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - display_name
                - description
                - company_name
                - allowed_domains
                - invite_id
                - allow_open_invite
              properties:
                id:
                  type: string
                display_name:
                  type: string
                description:
                  type: string
                company_name:
                  type: string
                allowed_domains:
                  type: string
                invite_id:
                  type: string
                allow_open_invite:
                  type: string
        description: Team to update
        required: true
      responses:
        "200":
          description: Team update successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            teamID := "4xp9fdt77pncbef59f4k1qe83o"
            inviteID := "qjda3stwafbgpqjaxej3k76sga"

            uteam, resp := Client.UpdateTeam(&model.Team{
              Id:              teamID,
              DisplayName:     "displayName",
              Description:     "description",
              CompanyName:     "companyName",
              AllowedDomains:  "allowedDomains",
              InviteId:        inviteID,
              AllowOpenInvite: false,
            })
    delete:
      tags:
        - teams
      summary: Delete a team
      description: >
        Soft deletes a team, by marking the team as deleted in the database.
        Soft deleted teams will not be accessible in the user interface.


        Optionally use the permanent query parameter to hard delete the team for compliance reasons. As of server version 5.0, to use this feature `ServiceSettings.EnableAPITeamDeletion` must be set to `true` in the server's configuration.

        ##### Permissions

        Must have the `manage_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: permanent
          in: query
          description: Permanently delete the team, to be used for compliance reasons only.
            As of server version 5.0, `ServiceSettings.EnableAPITeamDeletion`
            must be set to `true` in the server's configuration.
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: Team deletion successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusOK"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            teamID := "4xp9fdt77pncbef59f4k1qe83o"

            // Non-permanent deletion
            ok, resp := Client.SoftDeleteTeam(&model.Team{Id: teamID})

            // Permanent deletion
            ok, resp := Client.PermanentDeleteTeam(&model.Team{Id: teamID})
  "/teams/{team_id}/patch":
    put:
      tags:
        - teams
      summary: Patch a team
      description: >
        Partially update a team by providing only the fields you want to update.
        Omitted fields will not be updated. The fields that can be updated are
        defined in the request body, all other provided fields will be ignored.

        ##### Permissions

        Must have the `manage_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                display_name:
                  type: string
                description:
                  type: string
                company_name:
                  type: string
                invite_id:
                  type: string
                allow_open_invite:
                  type: boolean
        description: Team object that is to be updated
        required: true
      responses:
        "200":
          description: team patch successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            patch := &model.TeamPatch{}
            patch.DisplayName = model.NewString("Other name")
            patch.Description = model.NewString("Other description")
            patch.CompanyName = model.NewString("Other company name")
            patch.AllowOpenInvite = model.NewBool(true)

            teamID := "4xp9fdt77pncbef59f4k1qe83o"

            team, resp := Client.PatchTeam(teamID, patch)
  "/teams/name/{name}":
    get:
      tags:
        - teams
      summary: Get a team by name
      description: >
        Get a team based on provided name string

        ##### Permissions

        Must be authenticated, team type is open and have the `view_team` permission.
      parameters:
        - name: name
          in: path
          description: Team Name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Team retrieval successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            team, resp := Client.GetTeamByName("teamName", "")
  /teams/search:
    post:
      tags:
        - teams
      summary: Search teams
      description: |
        Search teams based on search term provided in the request body.
        ##### Permissions
        Logged in user only shows open teams
        Logged in user with "manage_system" permission shows all teams
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - term
              properties:
                term:
                  description: The search term to match against the name or display name of
                    teams
                  type: string
                page:
                  type: string
                  description: The page number to return, if paginated. If this parameter
                    is not present with the `per_page` parameter then the
                    results will be returned un-paged.
                per_page:
                  type: string
                  description: The number of entries to return per page, if paginated. If
                    this parameter is not present with the `page` parameter then
                    the results will be returned un-paged.
        description: Search criteria
        required: true
      responses:
        "200":
          description: Paginated teams response. (Note that the non-paginated
            response—returned if the request body does not contain both `page`
            and `per_page` fields—is a simple array of teams.)
          content:
            application/json:
              schema:
                type: object
                properties:
                  teams:
                    type: array
                    description: The teams that matched the query.
                    items:
                      $ref: "#/components/schemas/Team"
                  total_count:
                    type: number
                    description: The total number of results, regardless of page and
                      per_page requested.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: >
            import "github.com/mattermost/mattermost-server/model"


            Client := model.NewAPIv4Client("https://your-mattermost-url.com")

            Client.Login("email@domain.com", "Password1")


            teams, resp := Client.SearchTeams(&model.TeamSearch{Term: "searchTerm"})
  "/teams/name/{name}/exists":
    get:
      tags:
        - teams
      summary: Check if team exists
      description: |
        Check if the team exists based on a team name.
        ##### Permissions
        Must be authenticated.
      parameters:
        - name: name
          in: path
          description: Team Name
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Team retrieval successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamExists"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            exists, resp := Client.TeamExists("teamName", "")
  "/users/{user_id}/teams":
    get:
      tags:
        - teams
      summary: Get a user's teams
      description: >
        Get a list of teams that a user is on.

        ##### Permissions

        Must be authenticated as the user or have the `manage_system` permission.
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Team list retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            userID := "4xp9fdt77pncbef59f4k1qe83o"

            teams, resp := Client.GetTeamsForUser(userID, "")
  "/teams/{team_id}/members":
    get:
      tags:
        - teams
      summary: Get team members
      description: >
        Get a page team members list based on query string parameters - team id,
        page and per page.

        ##### Permissions

        Must be authenticated and have the `view_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of users per page.
          schema:
            type: integer
            default: 60
      responses:
        "200":
          description: Team members retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamMember"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            teamID := "4xp9fdt77pncbef59f4k1qe83o"

            members, resp := Client.GetTeamMembers(teamID, 0, 100, "")
    post:
      tags:
        - teams
      summary: Add user to team
      description: >
        Add user to the team by user_id.

        ##### Permissions

        Must be authenticated and team be open to add self. For adding another user, authenticated user must have the `add_user_to_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                user_id:
                  type: string
        required: true
      responses:
        "201":
          description: Team member creation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamMember"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            teamID := "4xp9fdt77pncbef59f4k1qe83o"
            userID := "qjda3stwafbgpqjaxej3k76sga"

            teamMember, resp := Client.AddTeamMember(teamID, userID)
  /teams/members/invite:
    post:
      tags:
        - teams
      summary: Add user to team from invite
      description: >
        Using either an invite id or hash/data pair from an email invite link,
        add a user to a team.

        ##### Permissions

        Must be authenticated.
      parameters:
        - name: token
          in: query
          description: Token id from the invitation
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Team member creation successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamMember"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            tokenID := "qjda3stwafbgpqjaxej3k76sga"

            tm, resp = Client.AddTeamMemberFromInvite(tokenID, "")
  "/teams/{team_id}/members/batch":
    post:
      tags:
        - teams
      summary: Add multiple users to team
      description: >
        Add a number of users to the team by user_id.

        ##### Permissions

        Must be authenticated. Authenticated user must have the `add_user_to_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: graceful
          in: query
          description: 'Instead of aborting the operation if a user cannot be added, return
            an arrray that will contain both the success and added members and
            the ones with error, in form of `[{"member": {...}, "user_id",
            "...", "error": {...}}]`'
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/TeamMember"
        required: true
      responses:
        "201":
          description: Team members created successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamMember"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            teamID := "IJyUQLwh1CO9ahbzaQwWwc0ZnV"

            userID := "zWEyrTZ7GZ22aBSfoX60iWryTY"
            userID2 := "NqCSr5HMDZjrWS74IEmedvlOYf"

            tm, resp := Client.AddTeamMembers(teamID, []string{userID, userID2})
  "/users/{user_id}/teams/members":
    get:
      tags:
        - teams
      summary: Get team members for a user
      description: >
        Get a list of team members for a user. Useful for getting the ids of
        teams the user is on and the roles they have in those teams.

        ##### Permissions

        Must be logged in as the user or have the `edit_other_users` permission.
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Team members retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamMember"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            userID := "zWEyrTZ7GZ22aBSfoX60iWryTY"

            teamMembers, resp = Client.GetTeamMembersForUser(userID, "")
  "/teams/{team_id}/members/{user_id}":
    get:
      tags:
        - teams
      summary: Get a team member
      description: |
        Get a team member on the system.
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Team member retrieval successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamMember"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            teamID := "zWEyrTZ7GZ22aBSfoX60iWryTY"
            userID := "NqCSr5HMDZjrWS74IEmedvlOYf"

            teamMember, resp = Client.GetTeamMember(teamID, userID, "")
    delete:
      tags:
        - teams
      summary: Remove user from team
      description: >
        Delete the team member object for a user, effectively removing them from
        a team.

        ##### Permissions

        Must be logged in as the user or have the `remove_user_from_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Team member deletion successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusOK"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            teamID := "zWEyrTZ7GZ22aBSfoX60iWryTY"
            userID := "NqCSr5HMDZjrWS74IEmedvlOYf"

            ok, resp = Client.RemoveTeamMember(teamID, userID)
  "/teams/{team_id}/members/ids":
    post:
      tags:
        - teams
      summary: Get team members by ids
      description: |
        Get a list of team members based on a provided array of user ids.
        ##### Permissions
        Must have `view_team` permission for the team.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: List of user ids
        required: true
      responses:
        "200":
          description: Team members retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamMember"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
      x-code-samples:
        - lang: Go
          source: >
            import "github.com/mattermost/mattermost-server/model"


            Client := model.NewAPIv4Client("https://your-mattermost-url.com")

            Client.Login("email@domain.com", "Password1")


            teamID := zWEyrTZ7GZ22aBSfoX60iWryTY


            userID := "NqCSr5HMDZjrWS74IEmedvlOYf"

            userID2 := "UAFalLvtKwNKABAnmwR7uGB5md"


            tm, resp := Client.GetTeamMembersByIds(teamID, []string{userID, userID2})
  "/teams/{team_id}/stats":
    get:
      tags:
        - teams
      summary: Get a team stats
      description: |
        Get a team stats on the system.
        ##### Permissions
        Must be authenticated and have the `view_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Team stats retrieval successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamStats"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            teamID := "zWEyrTZ7GZ22aBSfoX60iWryTY"

            stats, resp := Client.GetTeamStats(teamID, "")
  "/teams/{team_id}/regenerate_invite_id":
    post:
      tags:
        - teams
      summary: Regenerate the Invite ID from a Team
      description: |
        Regenerates the invite ID used in invite links of a team
        ##### Permissions
        Must be authenticated and have the `manage_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Team Invite ID regenerated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            teamID := "zWEyrTZ7GZ22aBSfoX60iWryTY"

            team, resp := Client.RegenerateTeamInviteId(teamID)
  "/teams/{team_id}/image":
    get:
      tags:
        - teams
      summary: Get the team icon
      description: >
        Get the team icon of the team.


        __Minimum server version__: 4.9


        ##### Permissions

        User must be authenticated. In addition, team must be open or the user must have the `view_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Team icon retrieval successful
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "501":
          $ref: "#/components/responses/NotImplemented"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            teamID := "zWEyrTZ7GZ22aBSfoX60iWryTY"

            icon, resp = Client.GetTeamIcon(teamID, "")
    post:
      tags:
        - teams
      summary: Sets the team icon
      description: |
        Sets the team icon for the team.

        __Minimum server version__: 4.9

        ##### Permissions
        Must be authenticated and have the `manage_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  description: The image to be uploaded
                  type: string
                  format: binary
              required:
                - image
      responses:
        "200":
          description: Team icon successfully set
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusOK"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
      x-code-samples:
        - lang: Go
          source: |
            import (
              "io/ioutil"
              "log"

              "github.com/mattermost/mattermost-server/model"
            )

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            data, err := ioutil.ReadFile("icon.png")
            if err != nil {
              log.Fatal(err)
            }

            teamID := "zWEyrTZ7GZ22aBSfoX60iWryTY"

            ok, resp := Client.SetTeamIcon(teamID, data)
    delete:
      tags:
        - teams
      summary: Remove the team icon
      description: |
        Remove the team icon for the team.

        __Minimum server version__: 4.10

        ##### Permissions
        Must be authenticated and have the `manage_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Team icon successfully remove
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusOK"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "501":
          $ref: "#/components/responses/NotImplemented"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            teamID := "zWEyrTZ7GZ22aBSfoX60iWryTY"

            ok, resp = Client.RemoveTeamIcon(teamID)
  "/teams/{team_id}/members/{user_id}/roles":
    put:
      tags:
        - teams
      summary: Update a team member roles
      description: >
        Update a team member roles. Valid team roles are "team_user",
        "team_admin" or both of them. Overwrites any previously assigned team
        roles.

        ##### Permissions

        Must be authenticated and have the `manage_team_roles` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - roles
              properties:
                roles:
                  type: string
        description: Space-delimited team roles to assign to the user
        required: true
      responses:
        "200":
          description: Team member roles update successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusOK"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: >
            import "github.com/mattermost/mattermost-server/model"


            Client := model.NewAPIv4Client("https://your-mattermost-url.com")

            Client.Login("email@domain.com", "Password1")


            teamID := "zWEyrTZ7GZ22aBSfoX60iWryTY"

            userID := "NqCSr5HMDZjrWS74IEmedvlOYf"


            ok, resp := Client.UpdateTeamMemberRoles(teamID, userID, "team_user team_admin")
  "/teams/{team_id}/members/{user_id}/schemeRoles":
    put:
      tags:
        - teams
      summary: Update the scheme-derived roles of a team member.
      description: >
        Update a team member's scheme_admin/scheme_user properties. Typically
        this should either be `scheme_admin=false, scheme_user=true` for
        ordinary team member, or `scheme_admin=true, scheme_user=true` for a
        team admin.


        __Minimum server version__: 5.0


        ##### Permissions

        Must be authenticated and have the `manage_team_roles` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - scheme_admin
                - scheme_user
              properties:
                scheme_admin:
                  type: boolean
                scheme_user:
                  type: boolean
        description: Scheme properties.
        required: true
      responses:
        "200":
          description: Team member's scheme-derived roles updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusOK"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: >
            import "github.com/mattermost/mattermost-server/model"


            Client := model.NewAPIv4Client("https://your-mattermost-url.com")

            Client.Login("email@domain.com", "Password1")


            teamID := "zWEyrTZ7GZ22aBSfoX60iWryTY"

            userID := "NqCSr5HMDZjrWS74IEmedvlOYf"


            ok, resp := Client.UpdateTeamMemberSchemeRoles(teamID, userID, &model.SchemeRoles{
              SchemeAdmin: true,
              SchemeUser:  true,
            })
  "/users/{user_id}/teams/unread":
    get:
      tags:
        - teams
      summary: Get team unreads for a user
      description: >
        Get the count for unread messages and mentions in the teams the user is
        a member of.

        ##### Permissions

        Must be logged in.
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
        - name: exclude_team
          in: query
          description: Optional team id to be excluded from the results
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Team unreads retrieval successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamUnread"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            userID := "NqCSr5HMDZjrWS74IEmedvlOYf"
            teamID := "zWEyrTZ7GZ22aBSfoX60iWryTY"

            teams, resp := Client.GetTeamsUnreadForUser(userID, teamID)
  "/users/{user_id}/teams/{team_id}/unread":
    get:
      tags:
        - teams
      summary: Get unreads for a team
      description: >
        Get the unread mention and message counts for a team for the specified
        user.

        ##### Permissions

        Must be the user or have `edit_other_users` permission and have `view_team` permission for the team.
      parameters:
        - name: user_id
          in: path
          description: User GUID
          required: true
          schema:
            type: string
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Team unread count retrieval successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamUnread"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            userID := "NqCSr5HMDZjrWS74IEmedvlOYf"
            teamID := "zWEyrTZ7GZ22aBSfoX60iWryTY"

            teamUnread, resp := Client.GetTeamUnread(userID, teamID)
  "/teams/{team_id}/invite/email":
    post:
      tags:
        - teams
      summary: Invite users to the team by email
      description: |
        Invite users to the existing team usign the user's email.
        ##### Permissions
        Must have `invite_to_team` permission for the team.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        description: List of user's email
        required: true
      responses:
        "200":
          description: Users invite successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusOK"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
      x-code-samples:
        - lang: Go
          source: >
            import "github.com/mattermost/mattermost-server/model"


            Client := model.NewAPIv4Client("https://your-mattermost-url.com")

            Client.Login("email@domain.com", "Password1")


            teamID := "zWEyrTZ7GZ22aBSfoX60iWryTY"


            ok, resp := Client.InviteUsersToTeam(teamID, []string{"test@domain.com", "test2@domain.com"})
  "/teams/{team_id}/invite-guests/email":
    post:
      tags:
        - teams
      summary: Invite guests to the team by email
      description: |
        Invite guests to existing team channels usign the user's email.

        __Minimum server version__: 5.16

        ##### Permissions
        Must have `invite_guest` permission for the team.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - emails
                - channels
              properties:
                emails:
                  type: array
                  items:
                    type: string
                  description: List of emails
                channels:
                  type: array
                  items:
                    type: string
                  description: List of channel ids
                message:
                  type: string
                  description: Message to include in the invite
        description: Guests invite information
        required: true
      responses:
        "200":
          description: Guests invite successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusOK"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
      x-code-samples:
        - lang: Go
          source: >
            import "github.com/mattermost/mattermost-server/model"


            Client := model.NewAPIv4Client("https://your-mattermost-url.com")

            Client.Login("email@domain.com", "Password1")


            teamID := "zWEyrTZ7GZ22aBSfoX60iWryTY"

            channel1ID := "wu6wyxm9spgwtjaycjrcihnqtr"

            channel2ID := "ymzsgjw1tprniqtzyb7g3cmuuc"


            ok, resp := Client.InviteGuestsToTeam(teamID, []string{"test@domain.com", "test2@domain.com"}, []string{channel1ID, channel2ID}, "Please join to our mattermost team to keep working in the project")
  /teams/invites/email:
    delete:
      tags:
        - teams
      summary: Invalidate active email invitations
      description: >
        Invalidate active email invitations that have not been accepted by the
        user.

        ##### Permissions

        Must have `manage_system` permission.
      responses:
        "200":
          description: Email invites successfully revoked
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusOK"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            ok, resp := Client.InvalidateEmailInvites()
  "/teams/{team_id}/import":
    post:
      tags:
        - teams
      summary: Import a Team from other application
      description: >
        Import a team into a existing team. Import users, channels, posts,
        hooks.

        ##### Permissions

        Must have `permission_import_team` permission.
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: A file to be uploaded in zip format.
                  type: string
                  format: binary
                filesize:
                  description: The size of the zip file to be imported.
                  type: integer
                importFrom:
                  description: String that defines from which application the team was
                    exported to be imported into Mattermost.
                  type: string
              required:
                - file
                - filesize
                - importFrom
      responses:
        "200":
          description: JSON object containing a base64 encoded text file of the import logs
            in its `results` property.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: string
        "400":
          $ref: "#/components/responses/BadRequest"
        "403":
          $ref: "#/components/responses/Forbidden"
      x-code-samples:
        - lang: Go
          source: >
            import (
              "encoding/binary"
              "io/ioutil"
              "log"

              "github.com/mattermost/mattermost-server/model"
            )


            Client := model.NewAPIv4Client("https://your-mattermost-url.com")

            Client.Login("email@domain.com", "Password1")


            data, err = ioutil.ReadFile("to_import.zip")

            if err != nil && len(data) == 0 {
              log.Fatal("Error while reading file.")
            }


            teamID := "zWEyrTZ7GZ22aBSfoX60iWryTY"


            fileResp, resp := Client.ImportTeam(data, binary.Size(data), "slack", "to_import.zip", teamID)
  "/teams/invite/{invite_id}":
    get:
      tags:
        - teams
      summary: Get invite info for a team
      description: >
        Get the `name`, `display_name`, `description` and `id` for a team from
        the invite id.


        __Minimum server version__: 4.0


        ##### Permissions

        No authentication required.
      parameters:
        - name: invite_id
          in: path
          description: Invite id for a team
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Team invite info retrieval successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  display_name:
                    type: string
                  description:
                    type: string
        "400":
          $ref: "#/components/responses/BadRequest"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")

            inviteID := "zWEyrTZ7GZ22aBSfoX60iWryTY"

            team, resp = Client.GetTeamInviteInfo(inviteID)
  "/teams/{team_id}/scheme":
    put:
      tags:
        - teams
      summary: Set a team's scheme
      description: >
        Set a team's scheme, more specifically sets the scheme_id value of a
        team record.


        ##### Permissions

        Must have `manage_system` permission.


        __Minimum server version__: 5.0
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - scheme_id
              properties:
                scheme_id:
                  type: string
                  description: The ID of the scheme.
        description: Scheme GUID
        required: true
      responses:
        "200":
          description: Update team scheme successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StatusOK"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "501":
          $ref: "#/components/responses/NotImplemented"
      x-code-samples:
        - lang: Go
          source: |
            import "github.com/mattermost/mattermost-server/model"

            Client := model.NewAPIv4Client("https://your-mattermost-url.com")
            Client.Login("email@domain.com", "Password1")

            teamID := "4xp9fdt77pncbef59f4k1qe83o"
            schemeID := "qjda3stwafbgpqjaxej3k76sga"

            ok, resp := UpdateTeamScheme(teamID, schemeID)
        - lang: curl
          source: >
            curl -X PUT \
              https://your-mattermost-url.com/api/v4/teams/4xp9fdt77pncbef59f4k1qe83o/scheme \
              -H 'Authorization: Bearer frn8fu5rtpyc5m4xy6q3oj4yur' \
              -H 'Content-Type: application/json' \
              -d '{"scheme_id": "qjda3stwafbgpqjaxej3k76sga"}'
  "/teams/{team_id}/members_minus_group_members":
    get:
      tags:
        - teams
      summary: Team members minus group members.
      description: >
        Get the set of users who are members of the team minus the set of users
        who are members of the given groups.

        Each user object contains an array of group objects representing the group memberships for that user.

        Each user object contains the boolean fields `scheme_guest`, `scheme_user`, and `scheme_admin` representing the roles that user has for the given team.


        ##### Permissions

        Must have `manage_system` permission.


        __Minimum server version__: 5.14
      parameters:
        - name: team_id
          in: path
          description: Team GUID
          required: true
          schema:
            type: string
        - name: group_ids
          in: query
          description: A comma-separated list of group ids.
          required: true
          schema:
            type: string
            default: ""
        - name: page
          in: query
          description: The page to select.
          schema:
            type: integer
            default: 0
        - name: per_page
          in: query
          description: The number of users per page.
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: Successfully returns users specified by the pagination, and the
            total_count.
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
      x-code-samples:
        - lang: curl
          source: >
            curl
            'http://your-mattermost-url.com/api/v4/teams/fcnst115y3y7xmzzp5uq34u8ce/members_minus_group_members?group_ids=eoezijg8zffgjmch8icy5bjd1e,ugaw6wjc3tfxpcr1eq5u5k8dhe&page=0&per_page=100'
            \
                -H 'Authorization: Bearer mq8rrfxpdfyafbnw3qfmhwkx6c' \
                -H 'Content-Type: application/json' \
                -H 'X-Requested-With: XMLHttpRequest'
